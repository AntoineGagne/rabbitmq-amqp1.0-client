{minimum_otp_vsn, "20.0"}.

{alias, [
         {check, [lint, xref, dialyzer, edoc,
                  {eunit, "-c"}, {ct, "-c"}, {proper, "-c"},
                  {cover, "-v --min_coverage=0"},
                  {covertool, "generate"},
                  todo
                 ]}
        ]}.

{dialyzer, [
            {warnings, [
                        unknown,
                        race_conditions
                       ]}
           ]}.

{erl_opts, [
            debug_info,
            warnings_as_errors,
            warn_unused_import
           ]}.

{deps, [
        {amqp10_common,
         {git, "https://github.com/AntoineGagne/rabbitmq-amqp1.0-common.git",
          {branch, "feature/generate-files"}}}
       ]}.

{deps_warning_on_conflict, false}.

{artifacts, []}.

{profiles, [{prod, [
                    {post_hooks, []}
                   ]
            },
            {test, [
                    {erl_opts, [nowarn_export_all]},
                    {deps, [
                            {meck, "0.8.9"},
                            {proper,
                             {git, "https://github.com/manopapad/proper.git",
                              {branch, "master"}}}
                           ]}
                   ]}
           ]
}.

{plugins, [
           {covertool, {git, "https://github.com/covertool/covertool.git", {branch, "master"}}},
           {rebar3_proper, "0.11.1"},
           {rebar3_lint, {git, "https://github.com/project-fifo/rebar3_lint.git", {tag, "0.1.5"}}},
           {trx, ".*", {git, "https://github.com/ferd/trx.git", {branch, "master"}}},
           {rebar3_todo, {git, "https://github.com/ferd/rebar3_todo.git", {branch, "master"}}}
          ]}.

{ct_opts, [{ct_hooks, [cth_trx]}]}.
{cover_excl_mods, []}.

{cover_export_enabled, true}.
{covertool, [{coverdata_files, ["ct.coverdata", "eunit.coverdata", "proper.coverdata"]},
             {include_apps, []},
             {prefix_len, 0}]}.

{elvis,
 [#{dirs => ["src", "test"],
    filter => "*.erl",
    ignore => [],
    rules => [{elvis_style, line_length,
               #{ignore => [],
                 limit => 120,
                 skip_comments => false}},
              {elvis_style, no_tabs},
              {elvis_style, no_trailing_whitespace},
              {elvis_style, macro_names, #{ignore => []}},
              {elvis_style, macro_module_names},
              {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                         {right, "++"},
                                                         {left, "++"}]}},
              {elvis_style, nesting_level, #{level => 3}},
              {elvis_style, god_modules,
               #{limit => 25,
                 ignore => []}},
              {elvis_style, no_if_expression},
              {elvis_style, invalid_dynamic_call,
               #{ignore => []}},
              {elvis_style, used_ignored_variable},
              {elvis_style, no_behavior_info},
              {elvis_style,
               module_naming_convention,
               #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$", ignore => []}},
              {elvis_style,
               function_naming_convention,
               #{regex => "^[a-z]([a-z0-9]*_?)*$"}},
              {elvis_style, state_record_and_type},
              {elvis_style, no_spec_with_records},
              {elvis_style, dont_repeat_yourself, #{min_complexity => 20}},
              {elvis_style, no_debug_call, #{ignore => []}}
             ]
   },
  #{dirs => ["."],
    filter => "rebar.config",
    rules => [{elvis_project, no_deps_master_rebar, #{ignore => []}}]
   }
 ]
}.

{xref_checks,[undefined_function_calls,
              undefined_functions,
              locals_not_used,
              deprecated_function_calls,
              deprecated_functions]}.
{xref_ignores, []}.
